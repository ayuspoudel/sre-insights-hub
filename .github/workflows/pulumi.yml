name: Pulumi CI/CD Pipeline

on:
  push:
    branches:
      - 'main'  # Trigger only on push to the main branch
    paths:
      - 'pulumi/user-service-pulumi/**'  # Trigger only if there are changes in the `pulumi/user-service-pulumi` folder
  pull_request:
    branches:
      - main  # Trigger for PRs to the main branch
    paths:
      - 'pulumi/user-service-pulumi/**'  # Trigger only if there are changes in the `pulumi/user-service-pulumi` folder

jobs:
  pulumi-plan:
    name: Pulumi Plan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
                fetch-depth: 0

      - name: Set up Pulumi CLI
        run: |
          curl -fsSL https://get.pulumi.com | sh
          export PATH=$HOME/.pulumi/bin:$PATH

      - name: Print AWS Role
        run: | 
             export KEY="${{secrets.AWS_ROLE_TO_ASSUME}}"
             echo $KEY

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: us-east-1
          audience: sts.amazonaws.com

      - name: Set up Pulumi Access Token
        run: echo "PULUMI_ACCESS_TOKEN=${{ secrets.PULUMI_PAT }}" >> $GITHUB_ENV

      - name: Install dependencies
        run: npm install  # or your preferred package manager (e.g., yarn)

      - name: Pulumi Stack Init
        run: pulumi stack init ${GITHUB_REF#refs/heads/}  # Dynamically use the branch name as the stack name

      - name: Pulumi Preview (Dry Run)
        run: pulumi preview --stack ${GITHUB_REF#refs/heads/}  # Preview the plan before applying

  pulumi-apply:
    name: Pulumi Apply
    runs-on: ubuntu-latest
    needs: pulumi-plan
    if: needs.pulumi-plan.outputs.run_pulumi == 'true'
    environment:
      name: pulumi-up  # This triggers environment protection for manual approval
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Pulumi CLI
        run: |
          curl -fsSL https://get.pulumi.com | sh
          export PATH=$HOME/.pulumi/bin:$PATH

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: us-east-1

      - name: Set up Pulumi Access Token
        run: echo "PULUMI_ACCESS_TOKEN=${{ secrets.PULUMI_ACCESS_TOKEN }}" >> $GITHUB_ENV

      - name: Install dependencies
        run: npm install  # or your preferred package manager (e.g., yarn)

      - name: Run Pulumi Apply in the user-service folder
        run: |
          cd pulumi/user-service-pulumi
          pulumi stack select ${GITHUB_REF#refs/heads/}
          pulumi up --yes --stack ${GITHUB_REF#refs/heads/}

  pulumi-destroy:
    name: Pulumi Destroy
    runs-on: ubuntu-latest
    needs: pulumi-apply
    environment:
      name: pulumi-down  # This triggers environment protection for manual approval
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Pulumi CLI
        run: |
          curl -fsSL https://get.pulumi.com | sh
          export PATH=$HOME/.pulumi/bin:$PATH

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: us-east-1

      - name: Set up Pulumi Access Token
        run: echo "PULUMI_ACCESS_TOKEN=${{ secrets.PULUMI_ACCESS_TOKEN }}" >> $GITHUB_ENV

      - name: Install dependencies
        run: npm install  # or your preferred package manager (e.g., yarn)

      - name: Run Pulumi Destroy in the user-service folder
        run: |
          cd pulumi/user-service-pulumi
          pulumi stack select ${GITHUB_REF#refs/heads/}
          pulumi destroy --yes --stack ${GITHUB_REF#refs/heads/}
